{"version":3,"sources":["constants.js","services/api.ts","components/upload.tsx","reducers/comments.reducer.ts","action-types/user.ts","reducers/user.reducer.ts","action-types/auth.ts","reducers/auth.reducer.ts","reducers/index.ts","actions/user.action.ts","components/users.tsx","components/comments-list.tsx","components/filecomments.tsx","components/login.tsx","components/auditors.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["apiUri","getComments","commentor","a","axios","get","comment","getUser","userId","user","getUsers","users","getFileComments","fileId","createUser","name","post","loginAuditor","email","password","auditor","deleteUser","delete","Alert","props","elevation","variant","Upload","history","useHistory","useState","setuser","setusers","selectedFile","setselectedFile","setname","snackbarOpenError","setsnackbarOpenError","setsnackbarOpenSuccess","uploadProgress","setuploadProgress","onFileChange","event","config","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","target","files","filePayload","FormData","append","then","res","status","push","catch","err","console","log","useEffect","data","loadUsers","renderMenuItems","_id","MenuItem","value","handleSnackBarCloseError","reason","handleSnackBarCloseSuccess","LinearProgressWithLabel","Box","display","alignItems","width","mr","minWidth","Typography","color","Snackbar","open","autoHideDuration","onClose","severity","length","style","id","type","onChange","htmlFor","Button","component","FormControl","InputLabel","Select","label","title","map","initialState","ADD_USERS","LOGIN","combineReducers","auth","state","comments","addUsers","Users","dispatch","useDispatch","aUser","setaUser","useSelector","addUser","Container","Grid","container","height","item","xs","List","ListItem","onClick","ListItemText","e","useStyles","makeStyles","theme","createStyles","root","flexGrow","nested","paddingLeft","spacing","FilesList","setfiles","commentsCount","setcommentsCount","setOpen","dialogOpen","setdialogOpen","React","dateRange","setDateRange","duplicates","setduplicates","duplicatesOpen","setduplicatesOpen","employeeName","setemployeeName","isGettingData","setisGettingData","location","pathname","slice","username","mutatedComments","mutatedComment","date","moment","local","format","grouped","_","chain","groupBy","key","sortedByDate","sort","b","diff","isEmpty","count","reduce","acc","extractComments","sortedByInstagram","concat","apply","values","h","filter","sortedByCount","sortedByDateRange","sorted","isBetween","startDate","endDate","loadFiles","renderCommentsInsideAccordion","instagram","classes","handleDuplicatesOpen","onDeleteUser","closeConfirmationDialog","ConfirmationDialog","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","className","toggle","range","duplicatesCount","duplicatesCountSpread","totalValid","ListItemAvatar","Avatar","primary","secondary","button","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","duplicate","ListItemIcon","DoubleArrow","textAlign","reports","file","Accordion","TransitionProps","AccordionSummary","expandIcon","ExpandMoreOutlined","AccordionDetails","renderAccordion","marginTop","FileComments","setcomments","media_comments","loadFileComments","Login","loginForm","setloginForm","onFormFieldChange","login","localStorage","setItem","maxWidth","Auditor","store","createStore","reducer","navDisplayFlex","justifyContent","linkText","textDecoration","textTransform","Routes","getItem","AppBar","Toolbar","IconButton","edge","aria-label","Home","fontSize","undefined","to","clear","window","href","origin","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b2ed217.chunk.js","sourcesContent":["// ENV's\nconst DEV = \"DEV\";\nconst PROD = \"PROD\";\n\nconst CURRENTENV = PROD;\n\nconst prodUrl = \"http://18.136.123.125:8080\";\nconst localDevUrl = \"http://localhost:5000\";\n\nexport const apiUri = CURRENTENV === DEV ? localDevUrl : prodUrl;\n","import axios from 'axios'\nimport { apiUri } from '../constants';\nimport IAuditor from '../interfaces/IAuditor';\n\nexport const getComments = async (commentor: string) => {\n    const comment = await axios.get(`${apiUri}/get-comments?commentor=${commentor}`)\n    return comment;\n}\n\nexport const getUser = async (userId: string) => {\n    const user = await axios.get(`${apiUri}/get-user/${userId}`)\n    return user;\n}\n\nexport const getUsers = async () => {\n    const users = await axios.get(`${apiUri}/get-users`)\n    return users;\n}\n\nexport const getFiles = async (commentor: string) => {\n    const users = await axios.get(`${apiUri}/get-files?commentor=${commentor}`)\n    return users;\n}\n\nexport const getFileComments = async (fileId: string) => {\n    const users = await axios.get(`${apiUri}/get-file-comments?fileId=${fileId}`)\n    return users;\n}\n\nexport const createUser = async (name: string) => {\n    const user = await axios.post(`${apiUri}/create-user`, {name: name});\n    return user;\n}\n\nexport const loginAuditor = async ({email, password}: IAuditor) => {\n    const auditor = await axios.post(`${apiUri}/login-auditor`, {email, password})\n    return auditor;\n}\n\nexport const deleteUser = async (userId: string) => {\n    const user = await axios.delete(`${apiUri}/delete-user/${userId}`, )\n    return user;\n}\n","import {\n  Box,\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  Snackbar,\n  Typography,\n} from \"@material-ui/core\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport MuiAlert, { AlertProps } from \"@material-ui/lab/Alert\";\nimport { apiUri } from \"../constants\";\nimport { getUsers } from \"../services/api\";\nimport LinearProgress from \"@material-ui/core/LinearProgress/LinearProgress\";\n\nfunction Alert(props: AlertProps) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function Upload() {\n  const history = useHistory();\n  const [user, setuser] = useState(\"\");\n  const [users, setusers] = useState([]);\n  const [selectedFile, setselectedFile] = useState();\n  const [name, setname] = useState(\"\");\n  const [snackbarOpenError, setsnackbarOpenError] = useState(false);\n  const [snackbarOpenSuccess, setsnackbarOpenSuccess] = useState(false);\n  const [uploadProgress, setuploadProgress] = useState(0);\n  useEffect(() => {\n    async function loadUsers() {\n      const { data } = await getUsers();\n      setusers(data);\n    }\n    loadUsers();\n  }, []);\n\n  function onFileChange(event: any) {\n    const config = {\n      onUploadProgress: function (progressEvent: any) {\n        var percentCompleted = Math.round(\n          (progressEvent.loaded * 100) / progressEvent.total\n        );\n        setuploadProgress(percentCompleted);\n      },\n    };\n\n    setselectedFile(event.target.files[0]);\n    setname(event.target.files[0].name);\n    const filePayload = new FormData();\n    filePayload.append(\"file\", event.target.files[0]);\n    filePayload.append(\"commentor\", user);\n    axios\n      .post(`${apiUri}/upload-file`, filePayload, config)\n      .then((res) => {\n        setname(\"\");\n        if (res.status === 200) {\n          history.push(\"/users\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setname(\"\");\n        setsnackbarOpenError(true);\n      });\n  }\n\n  const renderUploadButton = () => (\n    <div>\n      <input\n        style={{ display: \"none\" }}\n        id=\"raised-button-file\"\n        type=\"file\"\n        onChange={onFileChange}\n      />\n      <label htmlFor=\"raised-button-file\">\n        <Button component=\"span\" variant=\"outlined\">\n          Upload\n        </Button>\n      </label>\n      {selectedFile && <h1>{name}</h1>}\n    </div>\n  );\n\n  const renderMenuItems = ({ _id, name }: any) => (\n    <MenuItem value={_id} key={_id}>\n      {name}\n    </MenuItem>\n  );\n\n  const renderUserSelect = () => (\n    <FormControl>\n      <InputLabel>Choose A User</InputLabel>\n      <Select\n        onChange={({ target }: any) => setuser(target.value)}\n        style={{ width: \"200px\" }}\n        label=\"Choose A User\"\n        title=\"Choose A User\"\n      >\n        {users && users.map(renderMenuItems)}\n      </Select>\n    </FormControl>\n  );\n\n  const handleSnackBarCloseError = (\n    event?: React.SyntheticEvent,\n    reason?: string\n  ) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setsnackbarOpenError(false);\n  };\n\n  const handleSnackBarCloseSuccess = (\n    event?: React.SyntheticEvent,\n    reason?: string\n  ) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setsnackbarOpenSuccess(false);\n  };\n\n  const renderSnackBar = () => (\n    <Snackbar\n      open={snackbarOpenError}\n      autoHideDuration={10000}\n      onClose={handleSnackBarCloseError}\n    >\n      <Alert onClose={handleSnackBarCloseError} severity=\"error\">\n        Error Uploading Might be and invalid file or the comments in file are\n        already stored in the db\n      </Alert>\n    </Snackbar>\n  );\n\n  const renderSnackBarSuccess = () => (\n    <Snackbar\n      open={snackbarOpenError}\n      autoHideDuration={10000}\n      onClose={handleSnackBarCloseSuccess}\n    >\n      <Alert onClose={handleSnackBarCloseSuccess} severity=\"success\">\n        File Uploaded See User Tab\n      </Alert>\n    </Snackbar>\n  );\n\n  function LinearProgressWithLabel(props: any) {\n    return (\n      <Box display=\"flex\" alignItems=\"center\">\n        <Box width=\"100%\" mr={1}>\n          <LinearProgress variant=\"determinate\" {...props} />\n        </Box>\n        <Box minWidth={35}>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            {props.value < 100 ? (\n              `${Math.round(props.value)}%`\n            ) : (\n              <CheckCircleIcon color=\"primary\" />\n            )}\n          </Typography>\n        </Box>\n        {props.value === 100 &&\n          \"Parsing Comments. Please Wait for Redirection to the Users Page\"}\n      </Box>\n    );\n  }\n\n  const renderProgressCircle = () => (\n    <div>\n      <LinearProgressWithLabel value={uploadProgress} />\n    </div>\n  );\n\n  return (\n    <div>\n      {renderSnackBarSuccess()}\n      {renderSnackBar()}\n      {user.length > 0 && renderUploadButton()}\n      {renderUserSelect()}\n      {selectedFile && <h1>{name}</h1>}\n      {renderProgressCircle()}\n    </div>\n  );\n}\n","const initialState = [] as any;\n\nexport default function comments(state = initialState, { type, comment }: any) {\n  switch (type) {\n    case \"ADD_COMMENT\":\n      return {\n        ...state,\n        comment,\n      };\n    default:\n      return state;\n  }\n}\n","export const ADD_USERS = 'ADD_USERS'","import { ADD_USERS } from \"../action-types/user\";\n\nconst initialState = [] as any;\n\nexport default function users(state = initialState, { type, users }: any) {\n  switch (type) {\n    case ADD_USERS:\n      return {\n        ...state,\n        users,\n      };\n    default:\n      return state;\n  }\n}\n","export const LOGIN = \"LOGIN\"","import { LOGIN } from \"../action-types/auth\";\n\nconst initialState = {\n  email: \"\",\n  password: \"\",\n} as any;\n\nexport default function auth(state = initialState, { type, auth }: any) {\n  switch (type) {\n    case LOGIN:\n      return {\n        ...state,\n        auth,\n      };\n    default:\n      return state;\n  }\n}\n","import {combineReducers } from 'redux'\nimport comments from './comments.reducer'\nimport users from './user.reducer'\nimport auth from './auth.reducer'\nexport default  combineReducers({\n    auth,\n    comments,\n    users\n})","import { ADD_USERS } from '../action-types/user'\n\nexport const addUsers = (users: Array<any>) => ({\n    type: ADD_USERS,\n    users,\n})","import {\n  Button,\n  Container,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addUsers } from \"../actions/user.action\";\nimport { createUser, getUsers } from \"../services/api\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\n\nexport default function Users() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [name, setname] = useState(\"\");\n  const [aUser, setaUser] = useState();\n  const { users }: any = useSelector(({ users }: any) => users);\n  useEffect(() => {\n    async function loadUsers() {\n      const { data } = await getUsers();\n      dispatch(addUsers(data));\n    }\n    loadUsers();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [aUser]);\n\n  const onNameChange = (e: any) => {\n    setname(e.target.value);\n  };\n\n  const addUser = async () => {\n    const user = await createUser(name);\n    if (user.status === 200) {\n      setaUser(user.data);\n    }\n  };\n\n  const renderUsersList = ({ name, _id }: any) => (\n    <ListItem key={_id}>\n      <Button variant=\"outlined\" onClick={() => history.push(\"/files/\" + _id)}>\n        <ListItemText>{name}</ListItemText>\n      </Button>\n    </ListItem>\n  );\n\n  return (\n    <div>\n      <Container>\n        <Grid container style={{ height: \"100vh\" }}>\n          <Grid item xs={6}>\n            <List>{users && users.map(renderUsersList)}</List>\n          </Grid>\n          <Grid item xs={6}>\n            <Typography>Add User</Typography>\n            <TextField\n              label=\"Employee Name\"\n              type=\"name\"\n              onChange={onNameChange}\n              name=\"name\"\n            />\n            {name.length > 0 && (\n              <Button color=\"secondary\" onClick={addUser} variant=\"contained\">\n                Add User\n              </Button>\n            )}\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { deleteUser, getComments, getUser } from \"../services/api\";\nimport { useHistory } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Button,\n  Collapse,\n  Grid,\n  ListItemIcon,\n  Typography,\n} from \"@material-ui/core\";\nimport {\n  DoubleArrow,\n  ExpandLess,\n  ExpandMore,\n  ExpandMoreOutlined,\n} from \"@material-ui/icons\";\nimport { DateRangePicker } from \"materialui-daterange-picker\";\n\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport WorkIcon from \"@material-ui/icons/Work\";\nimport BeachAccessIcon from \"@material-ui/icons/BeachAccess\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      width: \"90vw\",\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n  })\n);\n\nexport default function FilesList() {\n  const history = useHistory();\n  const [files, setfiles] = useState([]);\n  const [commentsCount, setcommentsCount] = useState(0);\n  const [open, setOpen] = useState(true);\n  const [dialogOpen, setdialogOpen] = useState(false);\n  const [dateRange, setDateRange]: any = React.useState();\n  const [duplicates, setduplicates]: Array<any> = useState([]);\n  const [duplicatesOpen, setduplicatesOpen] = useState(false);\n  const [employeeName, setemployeeName] = useState(\"\");\n  const [isGettingData, setisGettingData] = useState(true);\n  const pathname = history.location.pathname;\n  const userId = pathname.slice(7, 2000);\n  useEffect(() => {\n    async function loadFiles() {\n      const data = await getComments(userId);\n      const username = await getUser(userId);\n      if (data.status === 200 && username.status === 200) {\n        setisGettingData(false);\n        const { name } = username.data;\n        const { comments } = data.data;\n        setemployeeName(name);\n        const mutatedComments = comments.map((mutatedComment: any) => ({\n          ...mutatedComment,\n          date: moment(mutatedComment.date).local().format(\"MMMM DD YYYY\"),\n        }));\n\n        const grouped = _.chain(mutatedComments)\n          // Group the elements of Array based on `color` property\n          .groupBy(\"date\")\n          // `key` is group's name (color), `value` is the array of objects\n          .map((value, key) => {\n            return {\n              date: key,\n              comments: value,\n            };\n          })\n          .value();\n\n        const sortedByDate = grouped.sort((a, b) =>\n          moment(a.date).diff(b.date)\n        ) as any;\n\n        if (_.isEmpty(dateRange)) {\n          setfiles(sortedByDate);\n          const count = sortedByDate.reduce((acc: any, item: any) => {\n            return (acc += item.comments.length);\n          }, 0);\n\n          const extractComments = sortedByDate.map(({ comments }: any) => {\n            return comments;\n          });\n\n          const sortedByInstagram = _.chain(\n            [].concat.apply([], extractComments)\n          )\n            .groupBy(\"instagram\")\n            .map((values, key) => ({ key, count: values.length }))\n            .value();\n\n          const h = sortedByInstagram.filter((e) => e.count > 1);\n\n          const sortedByCount = _.chain(h)\n            .groupBy(\"count\")\n            .map((values, key) => ({ key, values }))\n            .value();\n          setduplicates(sortedByCount);\n          setcommentsCount(count);\n        } else {\n          const sortedByDateRange = sortedByDate.filter((sorted: any) => {\n            return moment(sorted.date).isBetween(\n              moment(dateRange.startDate),\n              moment(dateRange.endDate),\n              null,\n              \"[]\"\n            );\n          });\n          setfiles(sortedByDateRange);\n          const count = sortedByDateRange.reduce((acc: any, item: any) => {\n            return (acc += item.comments.length);\n          }, 0);\n\n          const extractComments = sortedByDateRange.map(({ comments }: any) => {\n            return comments;\n          });\n\n          const sortedByInstagram = _.chain(\n            [].concat.apply([], extractComments)\n          )\n            .groupBy(\"instagram\")\n            .map((values, key) => ({ key, count: values.length }))\n            .value();\n\n          const h = sortedByInstagram.filter((e) => e.count > 1);\n\n          const sortedByCount = _.chain(h)\n            .groupBy(\"count\")\n            .map((values, key) => ({ key, values }))\n            .value();\n          setduplicates(sortedByCount);\n          setcommentsCount(count);\n        }\n      }\n    }\n    loadFiles();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dateRange]);\n\n  const renderEmptiness = () => <h1>There is nothing here</h1>;\n\n  const renderCommentsInsideAccordion = (comments: Array<any>) => {\n    return comments.map((comment) => (\n      <ListItem>\n        <ListItemText>\n          {comment.comment} - {comment.instagram}\n        </ListItemText>\n      </ListItem>\n    ));\n  };\n\n  const renderAccordion = ({ date, comments }: any) => (\n    <Accordion\n      TransitionProps={{ unmountOnExit: true }}\n      style={{ width: \"30vw\" }}\n    >\n      <AccordionSummary expandIcon={<ExpandMoreOutlined />}>\n        <h3>{date}</h3>\n      </AccordionSummary>\n      <AccordionDetails>\n        <List>{renderCommentsInsideAccordion(comments)}</List>\n      </AccordionDetails>\n    </Accordion>\n  );\n\n  const toggle = () => setOpen(true);\n\n  const classes = useStyles();\n\n  const handleDuplicatesOpen = () => setduplicatesOpen(!duplicatesOpen);\n\n  const reports = () => {\n    const duplicatesCount = duplicates.reduce((acc: any, item: any) => {\n      return (acc += item.values.length);\n    }, 0);\n\n    const duplicatesCountSpread = duplicates.reduce((acc: any, item: any) => {\n      return (acc += item.values.length * item.key);\n    }, 0);\n\n    const totalValid = commentsCount - duplicatesCountSpread + duplicatesCount;\n\n    return (\n      <List>\n        <Typography>Reports for Selected Period for {employeeName}</Typography>\n        <ListItem>\n          <ListItemAvatar>\n            <Avatar>\n              <ImageIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText\n            primary={commentsCount}\n            secondary=\"Total Comments in this Period\"\n          />\n        </ListItem>\n        <ListItem>\n          <ListItemAvatar>\n            <Avatar>\n              <WorkIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText\n            primary={duplicatesCount}\n            secondary=\"Number of Duplicates If Merged\"\n          />\n        </ListItem>\n        <ListItem button onClick={handleDuplicatesOpen}>\n          <ListItemText primary=\"Breakdown\" />\n          {duplicatesOpen ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n        <Collapse in={duplicatesOpen} timeout=\"auto\" unmountOnExit>\n          <List>\n            {duplicates &&\n              duplicates.map((duplicate: any) => (\n                <ListItem className={classes.nested}>\n                  <ListItemIcon>\n                    <DoubleArrow />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={`${duplicate.key}'s`}\n                    secondary={duplicate.values.length}\n                    style={{ textAlign: \"center\" }}\n                  />\n                </ListItem>\n              ))}\n          </List>\n        </Collapse>\n        <ListItem>\n          <ListItemAvatar>\n            <Avatar>\n              <BeachAccessIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary={totalValid} secondary=\"Valid Comments\" />\n        </ListItem>\n      </List>\n    );\n  };\n\n  const onDeleteUser = async () => {\n    const user = await deleteUser(userId);\n    if (user.status === 200) {\n      history.push(\"/users\");\n    }\n  };\n\n  const renderDeleteButton = () => {\n    return (\n      <div\n        style={{ marginTop: \"20px\" }}\n        onClick={() => {\n          setdialogOpen(true);\n        }}\n      >\n        <Button color=\"secondary\" variant=\"contained\">\n          Delete User\n        </Button>\n      </div>\n    );\n  };\n\n  const closeConfirmationDialog = () => {\n    setdialogOpen(false);\n  };\n\n  const ConfirmationDialog = () => {\n    return (\n      <div>\n        <Dialog\n          open={dialogOpen}\n          onClose={closeConfirmationDialog}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            {\"Delete An Employee\"}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Deleting an employee may indicate removal or termination of\n              service. Please make sure you are certain this you have no\n              business needing this employee's data\n            </DialogContentText>\n            <DialogContentText id=\"alert-dialog-description\">\n              Are you sure you want to remove {employeeName} ?\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={closeConfirmationDialog} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={onDeleteUser} color=\"primary\" autoFocus>\n              Proceed and Delete {employeeName} Associated Data\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <div className={classes.root}>\n        <Grid container spacing={3}>\n          <Grid item xs>\n            <DateRangePicker\n              open={open}\n              toggle={toggle}\n              onChange={(range) => setDateRange(range)}\n            />\n          </Grid>\n          {isGettingData ? (\n            <CircularProgress />\n          ) : (\n            <Grid item xs>\n              {reports()}\n              {files.length < 1 && renderEmptiness()}\n              {files && files.map((file) => renderAccordion(file))}\n            </Grid>\n          )}\n        </Grid>\n      </div>\n      {renderDeleteButton()}\n      <ConfirmationDialog />\n    </div>\n  );\n}\n","import { List, ListItem, ListItemText } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { getFileComments } from '../services/api';\n\nexport default function FileComments() {\n    const history = useHistory();\n\n    const [comments, setcomments] = useState([])\n    useEffect(() => {\n        const pathname = history.location.pathname;\n        const fileId = pathname.slice(10, 2000)\n        async function loadFileComments() {\n            const data = await getFileComments(fileId);\n\n            if (data.status === 200) {\n                const { media_comments } = data.data;\n                setcomments(media_comments)\n            }\n        }\n        loadFileComments();\n    }, [history.location.pathname])\n\n    const renderComment = () => (<ListItem>\n        <ListItemText>\n\n        </ListItemText>\n    </ListItem>)\n\n    return (\n        <div>\n            <List>\n\n            </List>\n        </div>\n    )\n}\n","import { Button, Container, Grid, TextField } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport { loginAuditor } from '../services/api';\nimport { useDispatch } from 'react-redux';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar/Snackbar';\nimport { authenticate } from '../actions/auth.actions';\nimport { useHistory } from \"react-router-dom\"\n\nfunction Alert(props: AlertProps) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function Login() {\n    const history = useHistory()\n    const [loginForm, setloginForm]: any = useState();\n    const [snackbarOpenError, setsnackbarOpenError] = useState(false)\n    const onFormFieldChange = async (e: any) => {\n        setloginForm({\n            ...loginForm,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const login = async () => {\n        try {\n            const auditor = await loginAuditor(loginForm);\n            if (auditor.status === 200) {\n                const { email, password } = auditor.data;\n                localStorage.setItem('email', email);\n                history.push('/users')\n            } else {\n                setsnackbarOpenError(true)\n            }\n        } catch (error) {\n            setsnackbarOpenError(true)\n        }\n    }\n\n\n    const handleSnackBarCloseError = (event?: React.SyntheticEvent, reason?: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setsnackbarOpenError(false);\n    };\n\n\n    const renderSnackBar = () => (<Snackbar open={snackbarOpenError} autoHideDuration={10000} onClose={handleSnackBarCloseError}>\n        <Alert onClose={handleSnackBarCloseError} severity=\"error\">\n            Error Logging In\n        </Alert>\n    </Snackbar>)\n\n\n    return (\n        <div>\n            <Container maxWidth=\"sm\">\n                <Grid container spacing={3}>\n                    <Grid item xs={12} >\n                        <TextField label=\"Email\" type=\"email\" onChange={onFormFieldChange} name=\"email\" />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField label=\"Password\" type=\"password\" onChange={onFormFieldChange} name=\"password\" />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Button color=\"primary\" variant=\"contained\" onClick={() => login()}>Login</Button>\n                    </Grid>\n                </Grid>\n            </Container>\n            {renderSnackBar()}\n        </div>\n    )\n}\n","import { Button, Container, Grid, TextField } from '@material-ui/core'\nimport React from 'react'\n\nexport default function Auditor() {\n    return (\n        <div>\n\n            <Container maxWidth=\"sm\">\n                <Grid container spacing={3}>\n                    <Grid item xs={12} >\n                        <TextField label=\"Email\" type=\"email\" />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField label=\"Password\" />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Button color=\"primary\" variant=\"contained\">Login</Button>\n                    </Grid>\n                </Grid>\n            </Container>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport Upload from './components/upload';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducer from './reducers/index';\nimport { AppBar, Container, IconButton, List, ListItem, ListItemText, Toolbar } from '@material-ui/core';\nimport { Home } from '@material-ui/icons';\nimport Users from './components/users';\nimport FilesList from './components/comments-list';\nimport FileComments from './components/filecomments';\nimport Login from './components/login';\nimport Auditors from './components/auditors';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nconst store = createStore(reducer);\nconst useStyles = makeStyles({\n  navDisplayFlex: {\n    display: `flex`,\n    justifyContent: `space-between`\n  },\n  linkText: {\n    textDecoration: `none`,\n    textTransform: `uppercase`,\n    color: `white`\n  }\n});\n\nfunction App() {\n\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Routes />\n      </div>\n    </Provider>\n  );\n}\n\n\nconst Routes = () => {\n  const app = useSelector((state: any) => state)\n  const classes = useStyles();\n  const email = localStorage.getItem('email');\n  const history = useHistory();\n  return <Router>\n    <div>\n      <AppBar>\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"home\">\n            <Home fontSize=\"large\" />\n          </IconButton>\n          <List component=\"nav\" aria-labelledby=\"main navigation\" className={classes.navDisplayFlex}>\n            {email && email !== undefined && email !== null && email.length > 0 && <><ListItem button>\n              <Link to=\"/upload\" style={{ color: 'white', textDecoration: 'none' }}>\n                <ListItemText primary='Upload' />\n              </Link>\n            </ListItem>\n              <ListItem button>\n                <Link to=\"/users\" style={{ color: 'white', textDecoration: 'none' }}>\n                  <ListItemText primary='Users' />\n                </Link>\n              </ListItem></>}\n\n            {email && email !== undefined && email !== null && email.length > 0 ? <ListItem button>\n              <Link to=\"/logout\" style={{ color: 'white', textDecoration: 'none' }} onClick={() => {\n                localStorage.clear();\n                window.location.href = (window.location.origin);\n              }}>\n                <ListItemText primary='Logout' />\n              </Link>\n            </ListItem> : <ListItem button>\n                <Link to=\"/login\" style={{ color: 'white', textDecoration: 'none' }}>\n                  <ListItemText primary='Login' />\n                </Link>\n              </ListItem>}\n          </List>\n        </Toolbar>\n      </AppBar>\n      <Container style={{ marginTop: '100px' }}>\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/upload\">\n            <Upload />\n          </Route>\n          <Route path=\"/files\">\n            <FilesList />\n          </Route>\n          <Route path=\"/users\">\n            <Users />\n          </Route>\n          <Route path=\"/comments\">\n            <FileComments />\n          </Route>\n          <Route path=\"/auditors\">\n            <Auditors />\n          </Route>\n        </Switch>\n      </Container>\n    </div>\n  </Router>\n}\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}